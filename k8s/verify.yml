---
# This playbook verifies the cluster set up

- hosts: all
  sudo: yes

  tasks:

  - name: Verify | ping control n/w
    shell: ping "{{ hostvars[item]['name'] }}" -c 3 -W 1
    with_items: "{{ groups['masters'] }}"
 
  - name: Verify | contiv etcd 
    shell: etcdctl ls /contiv.io

- hosts: masters
  sudo: yes

  tasks:

  - name: Verify | apiserver status
    shell: service kube-apiserver status | grep running

  - name: Verify | controller-manager status
    shell: service kube-controller-manager status | grep running

  - name: Verify | scheduler status
    shell: service kube-scheduler status | grep running

  - name: Verify | netmaster status
    shell: service netmaster status | grep running

  - name: Verify | access to port 9002
    shell: curl "{{ hostvars[item]['contiv_control_ip'] }}":9002
    register: curl_9002
    failed_when: curl_9002.stdout.find("Empty reply from server") != -1
    with_items: "{{ groups['nodes'] }}"

  - name: Verify | access to port 9003
    shell: curl "{{ hostvars[item]['contiv_control_ip'] }}":9003
    register: curl_9003
    failed_when: curl_9003.stdout.find("Empty reply from server") != -1
    with_items: "{{ groups['nodes'] }}"

  - name: Verify | get netmaster start time
    shell: service netmaster status | grep running | grep since | awk '{print $6 " " $7}'
    register: nm_start_time

  - name: Verify | check netmaster logs for errors
    shell: journalctl --since="{{ nm_start_time.stdout }}" -u netmaster | grep error
    register: nm_errors
    failed_when: nm_errors.rc == 0
    ignore_errors: yes

- hosts: nodes
  sudo: yes

  tasks:

  - name: Verify | netplugin status
    shell: service netplugin status | grep running

  - name: Verify | kubelet status
    shell: service kubelet status | grep running

  - name: Verify | access to port 9001
    shell: curl "{{ hostvars[item]['contiv_control_ip'] }}":9001
    register: curl_9001
    failed_when: curl_9001.stdout.find("Empty reply from server") != -1
    with_items: "{{ groups['masters'] }}"

  - name: Verify | get netplugin start time
    shell: service netplugin status | grep running | grep since | awk '{print $6 " " $7}'
    register: np_start_time

  - name: Verify | check netplugin logs for errors
    shell: journalctl --since="{{ np_start_time.stdout }}" -u netplugin | grep error
    register: np_errors
    failed_when: np_errors.rc == 0
